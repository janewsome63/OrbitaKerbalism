// Convert Ore Harvesters

// Universal
@PART[*]:HAS[@MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]]]:FOR[OrbitaKerbalism]:NEEDS[!Kerbalism] {
	+MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]] {
		@Efficiency *= #$@RESOURCE_DEFINITION[Ore]/density$
		@Efficiency /= #$@RESOURCE_DEFINITION[Crystals]/density$
		@ResourceName = Crystals
		@ConverterName = #OrbitaLoc_Drill_Crystals_ConverterName
		@StartActionName = #OrbitaLoc_Drill_Crystals_StartActionName
		@StopActionName = #OrbitaLoc_Drill_Crystals_StopActionName
		@ToggleActionName = #OrbitaLoc_Drill_Crystals_ToggleActionName
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] {
			@Ratio *= #$@RESOURCE_DEFINITION[Crystals]/density$
			@Ratio /= #$@RESOURCE_DEFINITION[Ore]/density$
		}
	}
	+MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]] {
		@Efficiency *= #$@RESOURCE_DEFINITION[Ore]/density$
		@Efficiency /= #$@RESOURCE_DEFINITION[Ices]/density$
		@ResourceName = Ices
		@ConverterName = #OrbitaLoc_Drill_Ices_ConverterName
		@StartActionName = #OrbitaLoc_Drill_Ices_StartActionName
		@StopActionName = #OrbitaLoc_Drill_Ices_StopActionName
		@ToggleActionName = #OrbitaLoc_Drill_Ices_ToggleActionName
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] {
			@Ratio *= #$@RESOURCE_DEFINITION[Ices]/density$
			@Ratio /= #$@RESOURCE_DEFINITION[Ore]/density$
		}
	}
	+MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]] {
		@Efficiency *= #$@RESOURCE_DEFINITION[Ore]/density$
		@Efficiency /= #$@RESOURCE_DEFINITION[Metallics]/density$
		@ResourceName = Metallics
		@ConverterName = #OrbitaLoc_Drill_Metallics_ConverterName
		@StartActionName = #OrbitaLoc_Drill_Metallics_StartActionName
		@StopActionName = #OrbitaLoc_Drill_Metallics_StopActionName
		@ToggleActionName = #OrbitaLoc_Drill_Metallics_ToggleActionName
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] {
			@Ratio *= #$@RESOURCE_DEFINITION[Metallics]/density$
			@Ratio /= #$@RESOURCE_DEFINITION[Ore]/density$
		}
	}
	+MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]] {
		@Efficiency *= #$@RESOURCE_DEFINITION[Ore]/density$
		@Efficiency /= #$@RESOURCE_DEFINITION[Rocks]/density$
		@ResourceName = Rocks
		@ConverterName = #OrbitaLoc_Drill_Rocks_ConverterName
		@StartActionName = #OrbitaLoc_Drill_Rocks_StartActionName
		@StopActionName = #OrbitaLoc_Drill_Rocks_StopActionName
		@ToggleActionName = #OrbitaLoc_Drill_Rocks_ToggleActionName
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] {
			@Ratio *= #$@RESOURCE_DEFINITION[Rocks]/density$
			@Ratio /= #$@RESOURCE_DEFINITION[Ore]/density$
		}
	}
	+MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]] {
		@Efficiency *= #$@RESOURCE_DEFINITION[Ore]/density$
		@Efficiency /= #$@RESOURCE_DEFINITION[Salts]/density$
		@ResourceName = Salts
		@ConverterName = #OrbitaLoc_Drill_Salts_ConverterName
		@StartActionName = #OrbitaLoc_Drill_Salts_StartActionName
		@StopActionName = #OrbitaLoc_Drill_Salts_StopActionName
		@ToggleActionName = #OrbitaLoc_Drill_Salts_ToggleActionName
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] {
			@Ratio *= #$@RESOURCE_DEFINITION[Salts]/density$
			@Ratio /= #$@RESOURCE_DEFINITION[Ore]/density$
		}
	}
	+MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]] {
		@Efficiency *= #$@RESOURCE_DEFINITION[Ore]/density$
		@Efficiency /= #$@RESOURCE_DEFINITION[Petroleum]/density$
		@ResourceName = Petroleum
		@ConverterName = #OrbitaLoc_Drill_Petroleum_ConverterName
		@StartActionName = #OrbitaLoc_Drill_Petroleum_StartActionName
		@StopActionName = #OrbitaLoc_Drill_Petroleum_StopActionName
		@ToggleActionName = #OrbitaLoc_Drill_Petroleum_ToggleActionName
		@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]] {
			@Ratio *= #$@RESOURCE_DEFINITION[Petroleum]/density$
			@Ratio /= #$@RESOURCE_DEFINITION[Ore]/density$
		}
	}
	!MODULE[ModuleResourceHarvester]:HAS[#ResourceName[Ore]] {}
}
