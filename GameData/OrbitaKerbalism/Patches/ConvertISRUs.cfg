// Convert ISRUs

// Variables
@ORBITA_VARIABLES {
	%Processing {
		wasteHeatRatio = 1.15
	}
}

// Stock ISRUs
@PART[ISRU,MiniISRU]:HAS[@MODULE[ModuleResourceConverter]]:NEEDS[!Kerbalism] {
	// Determine mass throughputs
	inputMass = #$/MODULE[ModuleResourceConverter],0/INPUT_RESOURCE,0/Ratio$
	@inputMass *= #$@RESOURCE_DEFINITION[Ore]/density$
	outputMass = #$/MODULE[ModuleResourceConverter],0/OUTPUT_RESOURCE,0/Ratio$
	@outputMass += #$/MODULE[ModuleResourceConverter],0/OUTPUT_RESOURCE,1/Ratio$
	@outputMass *= #$@RESOURCE_DEFINITION[Oxidizer]/density$
	
	// Crystal Processor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Crystals_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Crystals_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Crystals_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Crystals_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Crystals]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Crystals
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.470159 // kJ to heat one unit by 161K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = CarbonDioxide
			Ratio = #$/outputMass$
			@Ratio *= 0.5955
			@Ratio /= #$@RESOURCE_DEFINITION[CarbonDioxide]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 0.2165
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Lithium
			Ratio = #$/outputMass$
			@Ratio *= 0.188
			@Ratio /= #$@RESOURCE_DEFINITION[Lithium]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Ice Processor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Ices_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Ices_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Ices_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Ices_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Ices]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Ices
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.166063 // kJ to heat one unit by 55K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Water
			Ratio = #$/outputMass$
			@Ratio *= 0.3673
			@Ratio /= #$@RESOURCE_DEFINITION[Water]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = CarbonDioxide
			Ratio = #$/outputMass$
			@Ratio *= 0.299
			@Ratio /= #$@RESOURCE_DEFINITION[CarbonDioxide]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Methane
			Ratio = #$/outputMass$
			@Ratio *= 0.218
			@Ratio /= #$@RESOURCE_DEFINITION[Methane]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Ammonia
			Ratio = #$/outputMass$
			@Ratio *= 0.1157
			@Ratio /= #$@RESOURCE_DEFINITION[Ammonia]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Metal Processor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Metallics_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Metallics_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Metallics_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Metallics_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Metallics]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Metallics 
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 4.87555 // kJ to heat one unit by 2052K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 0.5375
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Silicon
			Ratio = #$/outputMass$
			@Ratio *= 0.2359
			@Ratio /= #$@RESOURCE_DEFINITION[Silicon]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Aluminium
			Ratio = #$/outputMass$
			@Ratio *= 0.2266
			@Ratio /= #$@RESOURCE_DEFINITION[Aluminium]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Rock Processor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Rocks_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Rocks_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Rocks_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Rocks_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Rocks]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Rocks
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 3.153974 // kJ to heat one unit by 1693K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 0.5324
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Silicon
			Ratio = #$/outputMass$
			@Ratio *= 0.4674
			@Ratio /= #$@RESOURCE_DEFINITION[Silicon]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Uraninite
			Ratio = #$/outputMass$
			@Ratio *= 0.0002
			@Ratio /= #$@RESOURCE_DEFINITION[Uraninite]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Salt Processor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Salts_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Salts_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Salts_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Salts_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Salts]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Salts
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.450225 // kJ to heat one unit by 150K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 0.5997
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Ammonia
			Ratio = #$/outputMass$
			@Ratio *= 0.2128
			@Ratio /= #$@RESOURCE_DEFINITION[Ammonia]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Nitrogen
			Ratio = #$/outputMass$
			@Ratio *= 0.175
			@Ratio /= #$@RESOURCE_DEFINITION[Nitrogen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$/outputMass$
			@Ratio *= 0.0126
			@Ratio /= #$@RESOURCE_DEFINITION[Hydrogen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Petroleum Refinery
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Petroleum_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Petroleum_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Petroleum_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Petroleum_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Petroleum]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Petroleum
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.3375435 // kJ to heat one unit by 217K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Kerosene
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[Kerosene]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Ammonia Condenser
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_NH3Condenser_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_NH3Condenser_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_NH3Condenser_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_NH3Condenser_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Ammonia]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Ammonia
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.0002146894 // kJ to cool one unit by 54K (matched with evaporator)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = LqdAmmonia
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[LqdAmmonia]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Ammonia Evaporator
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_NH3Evaporator_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_NH3Evaporator_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_NH3Evaporator_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_NH3Evaporator_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[LqdAmmonia]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = LqdAmmonia
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.1960123 // kJ to heat one unit by 54 K(matched with condenser)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Ammonia
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[Ammonia]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Carbon Dioxide Condenser
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_CO2Condenser_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_CO2Condenser_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_CO2Condenser_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_CO2Condenser_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[CarbonDioxide]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = CarbonDioxide
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.0001641767 // kJ to cool one unit by 99K (matched with evaporator)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = LqdCO2
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[LqdCO2]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Carbon Dioxide Evaporator
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_CO2Evaporator_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_CO2Evaporator_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_CO2Evaporator_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_CO2Evaporator_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[LqdCO2]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = LqdCO2
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.098729 // kJ to heat one unit by 99K (matched with condenser)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = CarbonDioxide
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[CarbonDioxide]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Hydrogen Condenser 
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_H2Condenser_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_H2Condenser_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_H2Condenser_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_H2Condenser_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Hydrogen]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.000351206 // kJ to cool one unit by 273K (matched with evaporator)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = LqdHydrogen
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[LqdHydrogen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Hydrogen Evaporator 
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_H2Evaporator_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_H2Evaporator_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_H2Evaporator_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_H2Evaporator_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[LqdHydrogen]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = LqdHydrogen
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.276785 // kJ to heat one unit by 273K (matched with condenser)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[Hydrogen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Methane Condenser
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_CH4Condenser_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_CH4Condenser_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_CH4Condenser_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_CH4Condenser_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Methane]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Methane
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.000437024 // kJ to cool one unit by 182K (matched with evaporator)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = LqdMethane
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[LqdMethane]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Methane Evaporator
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_CH4Evaporator_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_CH4Evaporator_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_CH4Evaporator_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_CH4Evaporator_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[LqdMethane]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = LqdMethane
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.259417 // kJ to heat one unit by 182K (matched with condenser)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Methane
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[Methane]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Nitrogen Condenser
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_N2Condenser_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_N2Condenser_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_N2Condenser_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_N2Condenser_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Nitrogen]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Nitrogen
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.000551241 // kJ to cool one unit by 216K (matched with evaporator)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = LqdNitrogen
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[LqdNitrogen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Nitrogen Evaporator
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_N2Evaporator_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_N2Evaporator_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_N2Evaporator_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_N2Evaporator_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[LqdNitrogen]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = LqdNitrogen
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.363487 // kJ to heat one unit by 216K (matched with condenser)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Nitrogen
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[Nitrogen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Oxygen Condenser
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_O2Condenser_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_O2Condenser_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_O2Condenser_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_O2Condenser_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Oxygen]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.0002633316 // kJ to cool one unit by 203K (matched with evaporator)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = LqdOxygen
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[LqdOxygen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Oxygen Evaporator
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_O2Evaporator_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_O2Evaporator_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_O2Evaporator_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_O2Evaporator_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[LqdOxygen]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = LqdOxygen
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.213093 // kJ to heat one unit by 203K (matched with condenser)
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Uraninite Enrichment
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_UO2Enrichment_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_UO2Enrichment_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_UO2Enrichment_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_UO2Enrichment_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Uraninite]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Uraninite
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 540 // 0.125kg per 9000000kJ, 0.0075/0.125 * 9000000 / 1000
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = DepletedUranium
			Ratio = #$/outputMass$
			@Ratio *= 0.7346
			@Ratio /= #$@RESOURCE_DEFINITION[DepletedUranium]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = EnrichedUranium
			Ratio = #$/outputMass$
			@Ratio *= 0.1469
			@Ratio /= #$@RESOURCE_DEFINITION[EnrichedUranium]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 0.1185
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	// Carbon Dioxide Electrolysis
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_CO2Electrolysis_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_CO2Electrolysis_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_CO2Electrolysis_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_CO2Electrolysis_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[CarbonDioxide]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = CarbonDioxide
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 1 // Arbitrary, couldn't find data
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 0.7271
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Waste
			Ratio = #$/outputMass$
			@Ratio *= 0.2729
			@Ratio /= #$@RESOURCE_DEFINITION[Waste]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Water Electrolysis
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_H2OElectrolysis_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_H2OElectrolysis_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_H2OElectrolysis_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_H2OElectrolysis_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Water]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Water
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 1 // Arbitrary, couldn't find data
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$/outputMass$
			@Ratio *= 0.8879
			@Ratio /= #$@RESOURCE_DEFINITION[Oxygen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$/outputMass$
			@Ratio *= 0.1119
			@Ratio /= #$@RESOURCE_DEFINITION[Hydrogen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Methane Pyrolysis
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_CH4Pyrolysis_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_CH4Pyrolysis_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_CH4Pyrolysis_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_CH4Pyrolysis_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Methane]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Methane
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.002768595 // kJ to heat one unit by 1730K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Waste
			Ratio = #$/outputMass$
			@Ratio *= 0.7488
			@Ratio /= #$@RESOURCE_DEFINITION[Waste]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$/outputMass$
			@Ratio *= 0.2513
			@Ratio /= #$@RESOURCE_DEFINITION[Hydrogen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Ammonia Decomposition
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_NH3Decomposition_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_NH3Decomposition_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_NH3Decomposition_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_NH3Decomposition_resourceOutputName
		unitMass = #$@RESOURCE_DEFINITION[Ammonia]/density$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Ammonia
			Ratio = #$../unitsPerSec$
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.000635579 // kJ to heat one unit by 380K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Nitrogen
			Ratio = #$/outputMass$
			@Ratio *= 0.8224
			@Ratio /= #$@RESOURCE_DEFINITION[Nitrogen]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$/outputMass$
			@Ratio *= 0.1776
			@Ratio /= #$@RESOURCE_DEFINITION[Hydrogen]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Sabatier Reactor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Sabatier_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Sabatier_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Sabatier_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Sabatier_resourceOutputName
		co2Mass = #$@RESOURCE_DEFINITION[CarbonDioxide]/density$
		@co2Mass *= 0.8452
		h2Mass = #$@RESOURCE_DEFINITION[Hydrogen]/density$
		@h2Mass *= 0.1548
		
		unitMass = #$co2Mass$
		@unitMass += #$h2Mass$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = CarbonDioxide
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.8452
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.1548
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.001604833 // kJ to heat one unit by 330K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Water
			Ratio = #$/outputMass$
			@Ratio *= 0.692
			@Ratio /= #$@RESOURCE_DEFINITION[Water]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Methane
			Ratio = #$/outputMass$
			@Ratio *= 0.308
			@Ratio /= #$@RESOURCE_DEFINITION[Methane]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Haber Processor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Haber_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Haber_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Haber_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Haber_resourceOutputName
		n2Mass = #$@RESOURCE_DEFINITION[Nitrogen]/density$
		@n2Mass *= 0.8224
		h2Mass = #$@RESOURCE_DEFINITION[Hydrogen]/density$
		@h2Mass *= 0.1776
		
		unitMass = #$n2Mass$
		@unitMass += #$h2Mass$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Nitrogen
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.8224
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.1776
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.00152596 // kJ to heat one unit by 430K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Ammonia
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[Ammonia]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Anthraquinone Processor
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Anthraquinone_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Anthraquinone_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Anthraquinone_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Anthraquinone_resourceOutputName
		o2Mass = #$@RESOURCE_DEFINITION[Oxygen]/density$
		@o2Mass *= 0.9409
		h2Mass = #$@RESOURCE_DEFINITION[Hydrogen]/density$
		@h2Mass *= 0.0591
		
		unitMass = #$o2Mass$
		@unitMass += #$h2Mass$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Oxygen
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.9409
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = Hydrogen
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.0591
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.0000570832 // kJ to heat one unit by 25K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = HydrogenPeroxide
			Ratio = #$/outputMass$
			@Ratio *= 1.0
			@Ratio /= #$@RESOURCE_DEFINITION[HydrogenPeroxide]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	
	// Hydrazine Production
	+MODULE[ModuleResourceConverter],0 {
		@ConverterName = #OrbitaLoc_ISRU_Hydrazine_ConverterName
		@StartActionName = #OrbitaLoc_ISRU_Hydrazine_StartActionName
		@StopActionName = #OrbitaLoc_ISRU_Hydrazine_StopActionName
		@resourceOutputName = #OrbitaLoc_ISRU_Hydrazine_resourceOutputName
		nh3Mass = #$@RESOURCE_DEFINITION[Ammonia]/density$
		@nh3Mass *= 0.5003
		h2o2Mass = #$@RESOURCE_DEFINITION[HydrogenPeroxide]/density$
		@h2o2Mass *= 0.4997
		
		unitMass = #$nh3Mass$
		@unitMass += #$h2o2Mass$
		unitsPerSec = #$/inputMass$
		@unitsPerSec /= #$unitMass$
		!INPUT_RESOURCE:HAS[#ResourceName[*]] {}
		!OUTPUT_RESOURCE:HAS[#ResourceName[*]] {}
		INPUT_RESOURCE {
			ResourceName = Ammonia
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.5003
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = HydrogenPeroxide
			Ratio = #$../unitsPerSec$
			@Ratio *= 0.4997
			FlowMode = STAGE_PRIORITY_FLOW
		}
		INPUT_RESOURCE {
			ResourceName = ElectricCharge
			Ratio = 0.2901806 // kJ to heat one unit by 167K
			@Ratio *= #$../unitsPerSec$
			@Ratio *= #$@ORBITA_VARIABLES/Processing/wasteHeatRatio$
		}
		OUTPUT_RESOURCE {
			ResourceName = Water
			Ratio = #$/outputMass$
			@Ratio *= 0.5292
			@Ratio /= #$@RESOURCE_DEFINITION[Water]/density$
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE {
			ResourceName = Hydrazine
			Ratio = #$/outputMass$
			@Ratio *= 0.4708
			@Ratio /= #$@RESOURCE_DEFINITION[Hydrazine]/density$
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
	!MODULE[ModuleResourceConverter],0 {}
}