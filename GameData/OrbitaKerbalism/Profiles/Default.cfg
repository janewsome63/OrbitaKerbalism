// ============================================================================
// The default profile
// ============================================================================

Profile {
	// Supply {
		// resource = Hydrogen
		// low_message = #KERBALISM_low_hydrogen
		// empty_message = #KERBALISM_empty_hydrogen
		// refill_message = #KERBALISM_refill_hydrogen
	// }

	// Supply {
		// resource = Ammonia
		// low_message = #KERBALISM_low_ammonia
		// empty_message = #KERBALISM_empty_ammonia
		// refill_message = #KERBALISM_refill_ammonia
	// }

	// //convention: 1 capacity = enough to compress output of 1 crew member
	// Process {
		// name = waste compressor
		// title = #KERBALISM_Process_WasteCompressor
		// modifier = _WasteCompressor
		// input = ElectricCharge@1.2
		// input = Waste@0.0000045525
		// output = Shielding@0.00000001602982
	// }
	// RESOURCE_DEFINITION {
		// name = _WasteCompressor
		// density = 0.0
		// isVisible = false
	// }

	// // convention: 1 capacity = enough to process output of 1 crew member
	// Process {
		// name = waste processor
		// title = #KERBALISM_Process_WasteProcessor
		// modifier = _WasteProcessor
		// input = ElectricCharge@0.065556
		// input = Waste@0.0000045525
		// // According to https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4500995/ feces contains approximately 0.7% nitrogen.
		// // Feces is considered to the dominant source of Waste
		// // Waste is 975.3 times more dense than Ammonia
		// output = Ammonia@0.000031083125
	// }
	// RESOURCE_DEFINITION {
		// name = _WasteProcessor
		// density = 0.0
		// isVisible = false
	// }

	// Process {
		// name = hydrazine production N2 injection   // NitroPeroxide process
		// title = #KERBALISM_Process_HydrazineProductionN2
		// modifier = _NitroHydrazine
		// input = ElectricCharge@0.059678961  // calculated using 6.99 J/(g K) (sustained heating to 460K)
		// input = Ammonia@4.7203389609
		// input = Oxidizer@0.0014500000   // (HydrogenPeroxide@0.0050000000) Note that Oxidizer has a density of 5Kg/Unit
		// input = Nitrogen@3.5796568216
		// output = Oxygen@4.8371125902
		// output = MonoPropellant@0.0021344406   // (Hydrazine@0.0085037476) Note that MonoPropellant has a density of 4Kg/Unit
		// dump_valve = Oxygen,MonoPropellant
	// }

	// Process {
		// name = molten regolith electrolysis
		// title = #KERBALISM_Process_MoltenRegolithElectrolysis
		// modifier = _MRE
		// input = ElectricCharge@2.0 // 2 kW MRE reactor at 2300 K with heat corrosion resistant crucible
		// input = Ore@0.00006342
		// output = Oxygen@0.088843           // 42% of regolith is O2
		// output = CarbonDioxide@0.00444215  // approx 2% of regolith is CO2, released in the pre-heating stage @950K
		// output = Shielding@0.000000112     // makes Shielding out of waste Slag
		// dump_valve = Shielding&CarbonDioxide,Shielding,Shielding&Oxygen,CarbonDioxide,Oxygen,CarbonDioxide&Oxygen
	// }
}

// ============================================================================
// Add Part Upgrade for upgradeable slots
// ============================================================================

// PARTUPGRADE:NEEDS[ProfileDefault]
// {
  // name = Upgrade-Slots
  // partIcon = kerbalism-chemicalplant
  // techRequired = electronics
  // entryCost = 20000
  // title = #KERBALISM_Upgrade_Slots_title//Life support and Chemical plant slot upgrade
  // manufacturer = Lambda Aerospace
  // description = #KERBALISM_Upgrade_Slots_desc//Adds an additional configurable slot to Manned pods, ECLSS module and Chemical plants.
// }


// ============================================================================
// Add configurable Life Support System to all manned parts
// ============================================================================

// @PART[*]:HAS[#CrewCapacity[>0],!MODULE[KerbalSeat]]:NEEDS[ProfileDefault]:FOR[KerbalismDefault] {
	// MODULE {
		// name = ProcessController
		// resource = _WasteProcessor
		// title = #KERBALISM_WasteProcessor_title//Waste processor
		// capacity = #$/CrewCapacity$
		// running = true
	// }

	// MODULE {
		// name = Configure
		// title = Pod
		// slots = 2

		// UPGRADES {
			// UPGRADE {
				// name__ = Upgrade-Slots
				// techRequired__ = electronics
				// slots = 0
			// }
		// }

		// SETUP {
			// name = Waste Processor
			// desc = #KERBALISM_WasteProcessor_desc//Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			// tech = advExploration
			// mass = 0.05
			// cost = 500

			// MODULE {
				// type = ProcessController
				// id_field = resource
				// id_value = _WasteProcessor
			// }

			// RESOURCE {
				// name = Waste
				// amount = 0
				// maxAmount = #$/CrewCapacity$
				// @maxAmount *= 5
			// }
		// }
	// }
// }



// ============================================================================
// Add configurable Life Support System to Life Support Unit part
// ============================================================================

// @PART[kerbalism-lifesupportmodule]:NEEDS[ProfileDefault]:FOR[KerbalismDefault] {
	// MODULE {
		// name = Configure
		// title = Life Support
		// slots = 2

		// UPGRADES {
			// UPGRADE {
				// name__ = Upgrade-Slots
				// techRequired__ = electronics
				// slots = 0
			// }
		// }
	// }
// }






// You get a slot upgrade, and you get a slot upgrade, EVERYONE gets a slot upgrade!
// Had to fix unintended shenenigans, assuming whoever patched this initially never expected multiple configures on the same part.
@PART[*]:HAS[@MODULE[Configure]]:NEEDS[ProfileDefault]:FOR[zzzKerbalismDefault]
{ 	@MODULE[Configure]:HAS[#title[Pod]] 			{ @UPGRADES { @UPGRADE:HAS[#name__[Upgrade?Slots]] { @slots = #$../../slots$
      @slots += 1 } } }
	@MODULE[Configure]:HAS[#title[Life?Support]] 	{ @UPGRADES { @UPGRADE:HAS[#name__[Upgrade?Slots]] { @slots = #$../../slots$
      @slots += 1 } } }
	@MODULE[Configure]:HAS[#title[Chemical?Plant]] 	{ @UPGRADES { @UPGRADE:HAS[#name__[Upgrade?Slots]] { @slots = #$../../slots$
      @slots += 1 } } }
}

// tweak number of slots
@PART[MK1CrewCabin|Mark2Cockpit|cupola]:NEEDS[ProfileDefault]:FOR[zzzKerbalismDefault] 		{ @MODULE[Configure]:HAS[#title[Pod]] { @slots = 1 } }
@PART[mk3Cockpit_Shuttle]:NEEDS[ProfileDefault]:FOR[zzzKerbalismDefault] 						{ @MODULE[Configure]:HAS[#title[Pod]] { @slots = 3 } }




// ============================================================================
// Habitats
// ============================================================================

@PART[kerbalism-gravityring]:NEEDS[ProfileDefault]:FOR[KerbalismDefault]
{
  %CrewCapacity = 6
}

// ============================================================================
// Pseudo-resources used by processes
// ============================================================================





// sickbay

RESOURCE_DEFINITION
{
  name = _SickbayRDU
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SickbayTV
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SickbayShower
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SickbayLaundry
  density = 0.0
  isVisible = false
}

// adding mass to a kerbal leads to all sorts of oddities in KSP.
// 1. the crew mass isn't accounted for in the editor immediately after adding/removing crew.
//    you have to make an additional change to the vessel for the numbers to add up.
// 2. a kerbal on EVA already has a mass of > 100kg in stock. the crew mass would be ADDED to that.
//    this would produce 95k of mass out of nothing for each EVA.
// it's convoluted, and I won't bother messing around with that any more.
//@PHYSICSGLOBALS:FOR[KerbalismDefault]
//{
//    %kerbalCrewMass = 0.09375
//}

